{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../helpers/generic.service\";\nclass UserService {\n  constructor(genericService) {\n    this.genericService = genericService;\n    this._url = 'https://dummyjson.com';\n  }\n  login(email, password) {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json').set('mi-header', 'mi-header-value');\n    return this.genericService.post(this._url, 'auth/login', {\n      username: 'kminchelle',\n      password: '0lelplR'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.GenericService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nexport { UserService };","map":{"version":3,"names":["HttpHeaders","UserService","constructor","genericService","_url","login","email","password","headers","set","post","username","i0","ɵɵinject","i1","GenericService","factory","ɵfac","providedIn"],"sources":["/Users/juansalazar/repos/Cedesistemas/ecommerce_bancolombia_06/src/app/infraestructure/driven-adapter/services/user/user.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Usergateway } from 'src/app/domain/models/User/gateway/usergateway';\nimport { User } from 'src/app/domain/models/User/user';\nimport { GenericService } from '../helpers/generic.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService implements Usergateway {\n\n  constructor(private genericService: GenericService) { }\n  _url = 'https://dummyjson.com'\n  login(email: string, password: string): Observable<User> {\n    const headers = new HttpHeaders().set('Content-Type', 'application/json')\n      .set('mi-header', 'mi-header-value')\n    return this.genericService.post<User>(this._url, 'auth/login', { username: 'kminchelle', password: '0lelplR' });\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,MAGaC,WAAW;EAEtBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAClC,KAAAC,IAAI,GAAG,uBAAuB;EADwB;EAEtDC,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IACnC,MAAMC,OAAO,GAAG,IAAIR,WAAW,EAAE,CAACS,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACtEA,GAAG,CAAC,WAAW,EAAE,iBAAiB,CAAC;IACtC,OAAO,IAAI,CAACN,cAAc,CAACO,IAAI,CAAO,IAAI,CAACN,IAAI,EAAE,YAAY,EAAE;MAAEO,QAAQ,EAAE,YAAY;MAAEJ,QAAQ,EAAE;IAAS,CAAE,CAAC;EACjH;;AARWN,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}