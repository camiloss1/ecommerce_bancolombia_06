{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction RegisterComponent_div_14_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r6.message);\n  }\n}\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_label_1_Template, 2, 1, \"label\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.campos[\"name\"].hasError(validation_r6.type));\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.validationMessages.name);\n  }\n}\nfunction RegisterComponent_div_19_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r10.message);\n  }\n}\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_label_1_Template, 2, 1, \"label\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r10 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.campos[\"email\"].hasError(validation_r10.type));\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.validationMessages.email);\n  }\n}\nfunction RegisterComponent_div_24_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r14 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r14.message);\n  }\n}\nfunction RegisterComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_label_1_Template, 2, 1, \"label\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r14 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.campos[\"password\"].hasError(validation_r14.type));\n  }\n}\nfunction RegisterComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_24_div_1_Template, 2, 1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.validationMessages.password);\n  }\n}\nfunction RegisterComponent_div_29_div_1_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r18 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(validation_r18.message);\n  }\n}\nfunction RegisterComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_29_div_1_label_1_Template, 2, 1, \"label\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validation_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r17.campos[\"confirmPassword\"].hasError(validation_r18.type));\n  }\n}\nfunction RegisterComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_29_div_1_Template, 2, 1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.validationMessages.confirmPassword);\n  }\n}\nfunction RegisterComponent_div_37_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 29);\n    i0.ɵɵtext(1, \" Las contrase\\u00F1as deben coincidir \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_37_label_1_Template, 2, 0, \"label\", 28);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.registerForm.hasError(\"notSame\"));\n  }\n}\nclass RegisterComponent {\n  constructor(formBuilder, router) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.validationMessages = {\n      name: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }],\n      email: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'email',\n        message: 'Este campo es de tipo email'\n      }],\n      password: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'pattern',\n        message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula'\n      }],\n      confirmPassword: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'pattern',\n        message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula'\n      }]\n    };\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)]],\n      confirmPassword: ['', [Validators.required, Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)]]\n    }, {\n      validator: this.checkPasswords\n    });\n  }\n  checkPasswords(group) {\n    let password = group.controls['password'].value;\n    let confirmPassword = group.controls['confirmPassword'].value;\n    console.log(password === confirmPassword);\n    return password === confirmPassword ? null : {\n      notSame: true\n    };\n  }\n  get campos() {\n    return this.registerForm.controls;\n  }\n  register() {\n    if (this.registerForm.valid) {\n      this.router.navigate(['/fullscreen/login']);\n    } else {\n      alert('Este formulario no es valido');\n    }\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 46,\n  vars: 6,\n  consts: [[1, \"vh-100\", \"bg-image\", 2, \"background-image\", \"url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp')\"], [1, \"mask\", \"d-flex\", \"align-items-center\", \"h-100\", \"gradient-custom-3\"], [1, \"container\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-9\", \"col-lg-7\", \"col-xl-6\"], [1, \"card\", 2, \"border-radius\", \"15px\"], [1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [3, \"formGroup\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"text\", \"id\", \"form3Example1cg\", \"formControlName\", \"name\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example1cg\", 1, \"form-label\"], [4, \"ngIf\"], [\"type\", \"email\", \"id\", \"form3Example3cg\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example3cg\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"form3Example4cg\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example4cg\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"form3Example4cdg\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form3Example4cdg\", 1, \"form-label\"], [1, \"form-check\", \"d-flex\", \"justify-content-center\", \"mb-5\"], [\"type\", \"checkbox\", \"value\", \"\", \"id\", \"form2Example3cg\", 1, \"form-check-input\", \"me-2\"], [\"for\", \"form2Example3g\", 1, \"form-check-label\"], [\"href\", \"#!\", 1, \"text-body\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-block\", \"btn-lg\", \"gradient-custom-4\", \"text-body\", 3, \"click\"], [1, \"text-center\", \"text-muted\", \"mt-5\", \"mb-0\"], [\"routerLink\", \"/fullscreen/login\", 1, \"fw-bold\", \"text-body\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Create an account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 8)(10, \"div\", 9);\n      i0.ɵɵelement(11, \"input\", 10);\n      i0.ɵɵelementStart(12, \"label\", 11);\n      i0.ɵɵtext(13, \"Your Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 9);\n      i0.ɵɵelement(16, \"input\", 13);\n      i0.ɵɵelementStart(17, \"label\", 14);\n      i0.ɵɵtext(18, \"Your Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 9);\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵelementStart(22, \"label\", 16);\n      i0.ɵɵtext(23, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(24, RegisterComponent_div_24_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 9);\n      i0.ɵɵelement(26, \"input\", 17);\n      i0.ɵɵelementStart(27, \"label\", 18);\n      i0.ɵɵtext(28, \"Repeat your password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(29, RegisterComponent_div_29_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 19);\n      i0.ɵɵelement(31, \"input\", 20);\n      i0.ɵɵelementStart(32, \"label\", 21);\n      i0.ɵɵtext(33, \" I agree all statements in \");\n      i0.ɵɵelementStart(34, \"a\", 22)(35, \"u\");\n      i0.ɵɵtext(36, \"Terms of service\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(37, RegisterComponent_div_37_Template, 2, 1, \"div\", 12);\n      i0.ɵɵelementStart(38, \"div\", 23)(39, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_39_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵtext(40, \"Register\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"p\", 25);\n      i0.ɵɵtext(42, \"Have already an account? \");\n      i0.ɵɵelementStart(43, \"a\", 26)(44, \"u\");\n      i0.ɵɵtext(45, \"Login here\");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.campos[\"name\"].touched || ctx.campos[\"name\"].dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.campos[\"email\"].touched || ctx.campos[\"email\"].dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.campos[\"password\"].touched || ctx.campos[\"password\"].dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.campos[\"confirmPassword\"].touched || ctx.campos[\"confirmPassword\"].dirty);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.campos[\"password\"].touched || ctx.campos[\"password\"].dirty || ctx.campos[\"confirmPassword\"].touched || ctx.campos[\"confirmPassword\"].dirty);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","validation_r6","message","ɵɵtemplate","RegisterComponent_div_14_div_1_label_1_Template","ɵɵproperty","ctx_r5","campos","hasError","type","RegisterComponent_div_14_div_1_Template","ctx_r0","validationMessages","name","validation_r10","RegisterComponent_div_19_div_1_label_1_Template","ctx_r9","RegisterComponent_div_19_div_1_Template","ctx_r1","email","validation_r14","RegisterComponent_div_24_div_1_label_1_Template","ctx_r13","RegisterComponent_div_24_div_1_Template","ctx_r2","password","validation_r18","RegisterComponent_div_29_div_1_label_1_Template","ctx_r17","RegisterComponent_div_29_div_1_Template","ctx_r3","confirmPassword","RegisterComponent_div_37_label_1_Template","ctx_r4","registerForm","RegisterComponent","constructor","formBuilder","router","ngOnInit","group","required","pattern","validator","checkPasswords","controls","value","console","log","notSame","register","valid","navigate","alert","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","RegisterComponent_div_14_Template","RegisterComponent_div_19_Template","RegisterComponent_div_24_Template","RegisterComponent_div_29_Template","RegisterComponent_div_37_Template","ɵɵlistener","RegisterComponent_Template_button_click_39_listener","touched","dirty"],"sources":["/Users/juansalazar/repos/Cedesistemas/ecommerce_bancolombia_06/src/app/UI/modules/register/register.component.ts","/Users/juansalazar/repos/Cedesistemas/ecommerce_bancolombia_06/src/app/UI/modules/register/register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm!: FormGroup;\n\n  public validationMessages = {\n    name: [\n      { type: 'required', message: 'Este campo es requerido' },\n    ],\n    email: [ \n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'email', message: 'Este campo es de tipo email' }\n    ],\n    password: [\n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'pattern', message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula' }\n    ],\n    confirmPassword: [\n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'pattern', message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula' }\n    ]\n  }\n  constructor(private formBuilder: FormBuilder, private router: Router) { }\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [\n        Validators.required,\n      ]\n      ],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: [\n        '', [\n          Validators.required,\n          Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)\n        ]\n      ],\n      confirmPassword: [\n        '', [\n          Validators.required,\n          Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)\n        ]\n      ],\n    }, { validator: this.checkPasswords }\n    )\n  }\n\n  checkPasswords(group: FormGroup) {\n    let password = group.controls['password'].value;\n    let confirmPassword = group.controls['confirmPassword'].value;\n    console.log(password === confirmPassword)\n    return password === confirmPassword ? null : { notSame: true }\n  }\n\n  public get campos() {\n    return this.registerForm.controls\n  }\n  register(){\n    if (this.registerForm.valid) {\n      this.router.navigate(['/fullscreen/login']);\n    }\n    else {\n      alert('Este formulario no es valido');\n    }\n  }\n}\n","<section class=\"vh-100 bg-image\"\n  style=\"background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\">\n  <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\n    <div class=\"container h-100\">\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\n        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\n          <div class=\"card\" style=\"border-radius: 15px;\">\n            <div class=\"card-body p-5\">\n              <h2 class=\"text-uppercase text-center mb-5\">Create an account</h2>\n\n              <form [formGroup]=\"registerForm\">\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"text\" id=\"form3Example1cg\" class=\"form-control form-control-lg\" formControlName=\"name\" />\n                  <label class=\"form-label\" for=\"form3Example1cg\">Your Name</label>\n                  <div *ngIf=\"campos['name'].touched || campos['name'].dirty\">\n                    <div *ngFor=\"let validation of validationMessages.name\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"campos['name'].hasError(validation.type)\">{{validation.message}}</label>\n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"email\" id=\"form3Example3cg\" class=\"form-control form-control-lg\" formControlName=\"email\"/>\n                  <label class=\"form-label\" for=\"form3Example3cg\">Your Email</label>\n                  <div *ngIf=\"campos['email'].touched || campos['email'].dirty\">\n                    <div *ngFor=\"let validation of validationMessages.email\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"campos['email'].hasError(validation.type)\">{{validation.message}}</label>\n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"password\" id=\"form3Example4cg\" class=\"form-control form-control-lg\" formControlName=\"password\"/>\n                  <label class=\"form-label\" for=\"form3Example4cg\">Password</label>\n                  <div *ngIf=\"campos['password'].touched || campos['password'].dirty\">\n                    <div *ngFor=\"let validation of validationMessages.password\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"campos['password'].hasError(validation.type)\">{{validation.message}}</label>\n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-outline mb-4\">\n                  <input type=\"password\" id=\"form3Example4cdg\" class=\"form-control form-control-lg\" formControlName=\"confirmPassword\"/>\n                  <label class=\"form-label\" for=\"form3Example4cdg\">Repeat your password</label>\n                  <div *ngIf=\"campos['confirmPassword'].touched || campos['confirmPassword'].dirty\">\n                    <div *ngFor=\"let validation of validationMessages.confirmPassword\">\n                        <label class=\"text-danger\"\n                            *ngIf=\"campos['confirmPassword'].hasError(validation.type)\">{{validation.message}}</label>\n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-check d-flex justify-content-center mb-5\">\n                  <input class=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3cg\" />\n                  <label class=\"form-check-label\" for=\"form2Example3g\">\n                    I agree all statements in <a href=\"#!\" class=\"text-body\"><u>Terms of service</u></a>\n                  </label>\n                </div>\n                <div *ngIf=\"campos['password'].touched || campos['password'].dirty || campos['confirmPassword'].touched || campos['confirmPassword'].dirty\">\n                  <!-- Todo lo que esta dentro de esta etiqiueta solo se ejecuta si el campo password es tocado o tiene información-->\n                      <label class=\"text-danger\" *ngIf=\"registerForm.hasError('notSame')\">\n                          Las contraseñas deben coincidir\n                      </label>\n              </div>\n                <div class=\"d-flex justify-content-center\">\n                  <button type=\"button\"\n                    class=\"btn btn-success btn-block btn-lg gradient-custom-4 text-body\" (click)=\"register()\">Register</button>\n                </div>\n\n                <p class=\"text-center text-muted mt-5 mb-0\">Have already an account? <a routerLink=\"/fullscreen/login\"\n                    class=\"fw-bold text-body\"><u>Login here</u></a></p>\n\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}