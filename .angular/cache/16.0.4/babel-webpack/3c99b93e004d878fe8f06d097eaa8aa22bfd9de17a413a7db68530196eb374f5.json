{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, router, http) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.http = http;\n    this.validationMessages = {\n      name: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }],\n      email: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'email',\n        message: 'Este campo es de tipo email'\n      }],\n      password: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'pattern',\n        message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula'\n      }],\n      confirmPassword: [{\n        type: 'required',\n        message: 'Este campo es requerido'\n      }, {\n        type: 'pattern',\n        message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula'\n      }]\n    };\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)]],\n      confirmPassword: ['', [Validators.required, Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)]]\n    }, {\n      validator: this.checkPasswords\n    });\n  }\n  checkPasswords(group) {\n    let password = group.controls['password'].value;\n    let confirmPassword = group.controls['confirmPassword'].value;\n    console.log(password === confirmPassword);\n    return password === confirmPassword ? null : {\n      notSame: true\n    };\n  }\n  get campos() {\n    return this.registerForm.controls;\n  }\n  register() {\n    if (this.registerForm.valid) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json').set('mi-header', 'mi-header-value');\n      this.http.post('https://dummyjson.com/auth/login', {\n        username: 'kminchelle',\n        password: '0lelplR'\n      }, {\n        headers\n      }).subscribe(data => {\n        console.log(data);\n      });\n      this.router.navigate(['/fullscreen/login']);\n    } else {\n      alert('Este formulario no es valido');\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"names":["HttpHeaders","Component","Validators","RegisterComponent","constructor","formBuilder","router","http","validationMessages","name","type","message","email","password","confirmPassword","ngOnInit","registerForm","group","required","pattern","validator","checkPasswords","controls","value","console","log","notSame","campos","register","valid","headers","set","post","username","subscribe","data","navigate","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/juansalazar/repos/Cedesistemas/ecommerce_bancolombia_06/src/app/UI/modules/register/register.component.ts"],"sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm!: FormGroup;\n\n  public validationMessages = {\n    name: [\n      { type: 'required', message: 'Este campo es requerido' },\n    ],\n    email: [ \n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'email', message: 'Este campo es de tipo email' }\n    ],\n    password: [\n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'pattern', message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula' }\n    ],\n    confirmPassword: [\n      { type: 'required', message: 'Este campo es requerido' },\n      { type: 'pattern', message: 'Este campo debe contener por lo menos 1 mayuscula y una minuscula' }\n    ]\n  }\n  constructor(private formBuilder: FormBuilder, private router: Router,private http: HttpClient) { }\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [\n        Validators.required,\n      ]\n      ],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: [\n        '', [\n          Validators.required,\n          Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)\n        ]\n      ],\n      confirmPassword: [\n        '', [\n          Validators.required,\n          Validators.pattern(/^(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$/gm)\n        ]\n      ],\n    }, { validator: this.checkPasswords }\n    )\n  }\n\n  checkPasswords(group: FormGroup) {\n    let password = group.controls['password'].value;\n    let confirmPassword = group.controls['confirmPassword'].value;\n    console.log(password === confirmPassword)\n    return password === confirmPassword ? null : { notSame: true }\n  }\n\n  public get campos() {\n    return this.registerForm.controls\n  }\n  register(){\n    if (this.registerForm.valid) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json')\n      .set('mi-header','mi-header-value')\n      this.http.post('https://dummyjson.com/auth/login', { username: 'kminchelle', password: '0lelplR' }, { headers }).subscribe((data: any) => {\n        console.log(data);\n      });\n      this.router.navigate(['/fullscreen/login']);\n    }\n    else {\n      alert('Este formulario no es valido');\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}